<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Atcrowdfunding.mapper.TAdminRoleMapper">
    <resultMap id="BaseResultMap" type="Atcrowdfunding.bean.TAdminRole">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="adminid" jdbcType="INTEGER" property="adminid"/>
        <result column="roleid" jdbcType="INTEGER" property="roleid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, adminid, roleid
  </sql>
    <!--  List<Integer> selectAIdByroleIds(Integer roleId); day10-shangwu07-->
    <select id="selectAIdByroleIds" resultType="java.lang.Integer">
        SELECT roleid
        FROM t_admin_role
        WHERE adminid= #{iiiddds}
  </select>

    <!--void insertAdminAndRole(Integer admiId, List<Integer> roleIds);-->
    <insert id="insertAdminAndRole">
        INSERT INTO
        t_admin_role (adminid,roleid)
        VALUES
        <foreach collection="roleIds" item="roleId" separator=",">
            (#{admiId},#{roleId})
        </foreach>
    </insert>

    <select id="selectByExample" parameterType="Atcrowdfunding.bean.TAdminRoleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_admin_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_admin_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="Atcrowdfunding.bean.TAdminRoleExample">
        delete from t_admin_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="Atcrowdfunding.bean.TAdminRole">
    insert into t_admin_role (id, adminid, roleid
      )
    values (#{id,jdbcType=INTEGER}, #{adminid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="Atcrowdfunding.bean.TAdminRole">
        insert into t_admin_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="adminid != null">
                adminid,
            </if>
            <if test="roleid != null">
                roleid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="adminid != null">
                #{adminid,jdbcType=INTEGER},
            </if>
            <if test="roleid != null">
                #{roleid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="Atcrowdfunding.bean.TAdminRoleExample" resultType="java.lang.Long">
        select count(*) from t_admin_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_admin_role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.adminid != null">
                adminid = #{record.adminid,jdbcType=INTEGER},
            </if>
            <if test="record.roleid != null">
                roleid = #{record.roleid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_admin_role
        set id = #{record.id,jdbcType=INTEGER},
        adminid = #{record.adminid,jdbcType=INTEGER},
        roleid = #{record.roleid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="Atcrowdfunding.bean.TAdminRole">
        update t_admin_role
        <set>
            <if test="adminid != null">
                adminid = #{adminid,jdbcType=INTEGER},
            </if>
            <if test="roleid != null">
                roleid = #{roleid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="Atcrowdfunding.bean.TAdminRole">
    update t_admin_role
    set adminid = #{adminid,jdbcType=INTEGER},
      roleid = #{roleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>